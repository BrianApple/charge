<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzzh.charge.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.hzzh.charge.model.User">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="birthday" jdbcType="DATE" property="birthday" />
        <result column="sex" jdbcType="CHAR" property="sex" />
        <result column="address" jdbcType="VARCHAR" property="address" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <foreach collection="oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                                <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </foreach>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                                <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </foreach>
    </sql>
    <sql id="Base_Column_List">
        u.id,
        u.username,
        u.birthday,
        u.sex,
        u.address
    </sql>
    <!-- 根据条件统计表中数据数量 所有数据 -->
    <select id="countByExample" parameterType="com.hzzh.charge.model.UserExample" resultType="java.lang.Integer">
        select
            count(*)
        from
            user u
        where
            1 = 1
        <if test="_parameter != null">
            <trim prefix="and (" suffix=")">
                <include refid="Example_Where_Clause" />
            </trim>
        </if>
    </select>
    <!-- 根据条件查询表中数据 所有数据 -->
    <select id="selectByExample" parameterType="com.hzzh.charge.model.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct 
        </if>
        <include refid="Base_Column_List" />
        from
            user u
        where
            1 = 1
        <if test="_parameter != null">
            <trim prefix="and (" suffix=")">
                <include refid="Example_Where_Clause" />
            </trim>
        </if>
        <if test="orderByClause != null">
            order by
                ${orderByClause}
        </if>
        <if test="currentSize != null">
            limit #{currentSize} , #{pageSize}
        </if>
    </select>
    <!-- 往表中插入一条数据 系统字段需要输入 -->
    <insert id="insert" parameterType="com.hzzh.charge.model.User">
        insert into
            user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            username,
            birthday,
            sex,
            address,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=INTEGER},
            #{username,jdbcType=VARCHAR},
            #{birthday,jdbcType=DATE},
            #{sex,jdbcType=CHAR},
            #{address,jdbcType=VARCHAR},
        </trim>
    </insert>
    <!-- 往表中批量插入数据 系统字段需要输入 -->
    <insert id="insertList" parameterType="java.util.List">
        insert into
            user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            username,
            birthday,
            sex,
            address,
        </trim>
        <foreach collection="list" item="item" open="values (" close=")" separator=" ), ( ">
            <trim suffixOverrides=",">
                #{item.id,jdbcType=INTEGER},
                #{item.username,jdbcType=VARCHAR},
                #{item.birthday,jdbcType=DATE},
                #{item.sex,jdbcType=CHAR},
                #{item.address,jdbcType=VARCHAR},
            </trim>
        </foreach>
    </insert>
    <!-- 往表中插入一条数据 字段为空不插入 系统字段需要输入 -->
    <insert id="insertSelective" parameterType="com.hzzh.charge.model.User">
        insert into
            user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="address != null">
                address,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <!-- 往表中批量插入数据 字段为空不插入 系统字段需要输入 -->
    <insert id="insertListSelective" parameterType="java.util.List">
        insert into
            user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="address != null">
                address,
            </if>
        </trim>
        <foreach collection="list" item="item" open="values (" close=")" separator=" ), ( ">
            <trim suffixOverrides=",">
                <if test="item.id != null">
                    #{item.id,jdbcType=INTEGER},
                </if>
                <if test="item.username != null">
                    #{item.username,jdbcType=VARCHAR},
                </if>
                <if test="item.birthday != null">
                    #{item.birthday,jdbcType=DATE},
                </if>
                <if test="item.sex != null">
                    #{item.sex,jdbcType=CHAR},
                </if>
                <if test="item.address != null">
                    #{item.address,jdbcType=VARCHAR},
                </if>
            </trim>
        </foreach>
    </insert>
    <!-- 根据条件修改数据 所有数据 -->
    <update id="updateByExample" parameterType="java.util.Map">
        update
            user u
        <trim prefix="set" suffix="" suffixOverrides=",">
            u.id = #{record.id,jdbcType=INTEGER},
            u.username = #{record.username,jdbcType=VARCHAR},
            u.birthday = #{record.birthday,jdbcType=DATE},
            u.sex = #{record.sex,jdbcType=CHAR},
            u.address = #{record.address,jdbcType=VARCHAR},
        </trim>
        where
            1 = 1
        <if test="_parameter != null">
            <trim prefix="and (" suffix=")">
                <include refid="Update_By_Example_Where_Clause" />
            </trim>
        </if>
    </update>
    <!-- 根据条件修改数据 字段为空不修改 所有数据 -->
    <update id="updateByExampleSelective" parameterType="java.util.Map">
        update
            user u
        <set>
            <if test="record.id != null">
                u.id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                u.username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.birthday != null">
                u.birthday = #{record.birthday,jdbcType=DATE},
            </if>
            <if test="record.sex != null">
                u.sex = #{record.sex,jdbcType=CHAR},
            </if>
            <if test="record.address != null">
                u.address = #{record.address,jdbcType=VARCHAR},
            </if>
        </set>
        where
            1 = 1
        <if test="_parameter != null">
            <trim prefix="and (" suffix=")">
                <include refid="Update_By_Example_Where_Clause" />
            </trim>
        </if>
    </update>
    <!-- 根据条件删除数据 物理删除 -->
    <delete id="deleteByExample" parameterType="com.hzzh.charge.model.UserExample">
        delete from
            user u
        where
            1 = 1
        <if test="_parameter != null">
            <trim prefix="and (" suffix=")">
                <include refid="Example_Where_Clause" />
            </trim>
        </if>
    </delete>
    <!-- 根据主键查询数据 所有数据 -->
    <select id="selectByPrimaryKey" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List" />
        from
            user u
        where
            1 = 1
        and u.id = #{id}
    </select>
    <!-- 根据主键修改数据 所有数据 -->
    <update id="updateByPrimaryKey" parameterType="com.hzzh.charge.model.User">
        update
            user u
        <set>
            u.id = #{id,jdbcType=INTEGER},
            u.username = #{username,jdbcType=VARCHAR},
            u.birthday = #{birthday,jdbcType=DATE},
            u.sex = #{sex,jdbcType=CHAR},
            u.address = #{address,jdbcType=VARCHAR},
        </set>
        where
            1 = 1
        and u.id = #{id,jdbcType=INTEGER}
    </update>
    <!-- 根据主键修改数据 字段为空不修改 所有数据 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.hzzh.charge.model.User">
        update
            user u
        <set>
            <if test="id != null">
                u.id = #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                u.username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                u.birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="sex != null">
                u.sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="address != null">
                u.address = #{address,jdbcType=VARCHAR},
            </if>
        </set>
        where
            1 = 1
        and u.id = #{id,jdbcType=INTEGER}
    </update>
    <!-- 根据主键删除数据 物理删除 -->
    <delete id="deleteByPrimaryKey" parameterType="java.util.Map">
        delete from
            user
        where
            1 = 1
        and id = #{id}
    </delete>
</mapper>